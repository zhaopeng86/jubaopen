apply plugin: 'com.android.library'
apply plugin: 'com.kezong.fat-aar'

// JitPack Maven
apply plugin: 'com.github.dcendents.android-maven'
// Your Group
group = 'com.github.bayescom'

def pomName = "easyads-csj"
def VersionCode = 4908
def VersionName = "${rootProject.ext.EasyAds_version}_" + VersionCode

def outputName = pomName + "_" + VersionName + ".aar"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode VersionCode
        versionName VersionName
        consumerProguardFiles 'consumer-rules.pro'
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "x86_64", "arm64-v8a"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    println pomName + " VersionName = " + VersionName

}

//android.libraryVariants.all { variant ->
//    variant.outputs.all {
//        outputFileName = outputName
//    }
//}

repositories {
    flatDir {
        dirs 'libs'
    }
}

// If the value is changed to true, the dependencies of the remote dependency will also be embedded in the final aar.
// the default value of transitive is false
configurations.embed.transitive = true

dependencies {
    compileOnly 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'


    def aarName = "open_ad_sdk_${VersionCode}"
    //发布时用embed捆绑aar包
    if (rootProject.ext.releaseSDK) {
        embed(name: aarName, ext: 'aar')
    } else {
        api fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    }

    compileOnly project(path: ':easyads')
}

